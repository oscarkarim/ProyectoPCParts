/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConfiguradorPC;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Usuario
 */
public class VentanaHijo2 extends javax.swing.JInternalFrame {
    String smt;
    /**
     * Creates new form VentanaHijo2
     */
    public VentanaHijo2() {
        initComponents();
        show_cpu();
        jTable_Display_CpuDetails.setDefaultEditor(Object.class, null);
    }
    
    public ArrayList<Cpu> listaCpus(){
        ArrayList<Cpu> listasCpus = new ArrayList<>();
        // parametros de la conexion
        String usr = "sa";
        String pwd = "YH6YDhmU6!X7XT";
        String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url = "jdbc:sqlserver://localhost\\SQLEXPRESS:56788;databaseName=JavaJ3;user=sa;password=YH6YDhmU6!X7XT";
        Connection con = null;
        //PreparedStatement pstm = null;
        //ResultSet rs = null;
        try
        {
        // -------------
        // ** PARTE 1 **
        // -------------
        // levanto el driver
        //Class.forName(driver);
        // establezco la conexion
        con = DriverManager.getConnection(url,usr,pwd);
        String query1 ="SELECT * FROM CpuDetails";
        Statement st= con.createStatement();
        ResultSet rs= st.executeQuery(query1);
        Cpu cpu;
        while(rs.next()){
            cpu=new Cpu(rs.getInt("cpuID"), rs.getInt("core_count"), rs.getDouble("price"), rs.getString("name"), rs.getString("smt"), rs.getString("integrated_graphics"), rs.getString("tdp"), rs.getString("boost_clock"), rs.getString("core_clock"));
            listasCpus.add(cpu);
            
        }
        }
        catch(Exception ex)
        {
        JOptionPane.showMessageDialog(null, ex);
        }
        return listasCpus;
    }
    
    public void show_cpu(){
        ArrayList<Cpu> list = listaCpus();
        DefaultTableModel model = (DefaultTableModel) jTable_Display_CpuDetails.getModel();
        Object[] row = new Object[9];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).getcpuID();
            row[1]=list.get(i).getname();
            row[2]=list.get(i).getsmt();
            row[3]=list.get(i).getintegratedgraphics();
            row[4]=list.get(i).gettdp();
            row[5]=list.get(i).getboostclock();
            row[6]=list.get(i).getcoreclock();
            row[7]=list.get(i).getcorecount();
            row[8]=list.get(i).getprice();
            
            model.addRow(row);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_CpuDetails = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        chkSMT = new javax.swing.JCheckBox();
        txtIntegratedGraphics = new javax.swing.JTextField();
        txtTDP = new javax.swing.JTextField();
        txtBoostClock = new javax.swing.JTextField();
        txtCoreClock = new javax.swing.JTextField();
        txtCoreCount = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Catalogo Procesadores");
        setPreferredSize(new java.awt.Dimension(1263, 574));
        setVisible(true);

        jTable_Display_CpuDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "SMT", "graficos integrados", "TDP", "boost clock", "core clock", "# de nucleos", "precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable_Display_CpuDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_CpuDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_CpuDetails);

        jLabel1.setText("Nombre");

        jLabel2.setText("SMT");

        jLabel3.setText("graficos integrados");

        jLabel4.setText("TDP");

        jLabel5.setText("boost clock");

        jLabel6.setText("core clock");

        jLabel7.setText("# de nucleos");

        jLabel8.setText("precio");

        chkSMT.setText("Si");
        chkSMT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSMTActionPerformed(evt);
            }
        });

        txtIntegratedGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIntegratedGraphicsActionPerformed(evt);
            }
        });

        txtCoreClock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCoreClockActionPerformed(evt);
            }
        });

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar Registro");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIntegratedGraphics))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtTDP, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkSMT)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrecio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtCoreCount))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtCoreClock))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtBoostClock, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(chkSMT, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtIntegratedGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBoostClock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCoreClock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCoreCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_Display_CpuDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_CpuDetailsMouseClicked
        // TODO add your handling code here:
        int i =jTable_Display_CpuDetails.getSelectedRow();
        TableModel model = jTable_Display_CpuDetails.getModel();
        txtName.setText(model.getValueAt(i, 1).toString());
        String smt = model.getValueAt(i, 2).toString();
        if(smt.equals("Yes")||smt.equals("YES")){
            chkSMT.setSelected(true);
        }
        else if(smt.equals("No")||smt.equals("NO")){
            chkSMT.setSelected(false);
        }
        txtIntegratedGraphics.setText(model.getValueAt(i, 3).toString());
        txtTDP.setText(model.getValueAt(i, 4).toString());
        txtBoostClock.setText(model.getValueAt(i, 5).toString());
        txtCoreClock.setText(model.getValueAt(i, 6).toString());
        txtCoreCount.setText(model.getValueAt(i, 7).toString());
        txtPrecio.setText(model.getValueAt(i,8).toString());
    }//GEN-LAST:event_jTable_Display_CpuDetailsMouseClicked

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void chkSMTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSMTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSMTActionPerformed

    private void txtIntegratedGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIntegratedGraphicsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIntegratedGraphicsActionPerformed

    private void txtCoreClockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCoreClockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCoreClockActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
         // parametros de la conexion
        String usr = "sa";
        String pwd = "YH6YDhmU6!X7XT";
        String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url = "jdbc:sqlserver://localhost\\SQLEXPRESS:56788;databaseName=JavaJ3;user=sa;password=YH6YDhmU6!X7XT";
        Connection con = null;
        //PreparedStatement pstm = null;
        //ResultSet rs = null;
        try
        {
        // -------------
        // ** PARTE 1 **
        // -------------
        // levanto el driver
        //Class.forName(driver);
        // establezco la conexion
        con = DriverManager.getConnection(url,usr,pwd);
        String query ="INSERT INTO CpuDetails(name,smt,integrated_graphics,tdp,boost_clock,core_clock,core_count,price)values(?,?,?,?,?,?,?,?)";
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1,txtName.getText());
        if(chkSMT.isSelected()){
            smt ="YES";
        }
        else{
            smt="NO";
        }
        pst.setString(2,smt);
        pst.setString(3, txtIntegratedGraphics.getText());
        pst.setString(4,txtTDP.getText());
        pst.setString(5, txtBoostClock.getText());
        
        pst.setString(6, txtCoreClock.getText());
        int corecount = Integer.parseInt(txtCoreCount.getText());
        pst.setInt(7,corecount);
        double price = Double.parseDouble(txtPrecio.getText());
        pst.setDouble(8,price);
        pst.executeUpdate();
        DefaultTableModel model =(DefaultTableModel)jTable_Display_CpuDetails.getModel();
        model.setRowCount(0);
        show_cpu();
        JOptionPane.showMessageDialog(null, "Agregado exitosamente");
        }
        catch(Exception ex)
        {
        JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
         // parametros de la conexion
        String usr = "sa";
        String pwd = "YH6YDhmU6!X7XT";
        String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url = "jdbc:sqlserver://localhost\\SQLEXPRESS:56788;databaseName=JavaJ3;user=sa;password=YH6YDhmU6!X7XT";
        Connection con = null;
        //PreparedStatement pstm = null;
        //ResultSet rs = null;
        try
        {
        // -------------
        // ** PARTE 1 **
        // -------------
        // levanto el driver
        //Class.forName(driver);
        // establezco la conexion
        con = DriverManager.getConnection(url,usr,pwd);
         int row = jTable_Display_CpuDetails.getSelectedRow();
        String value = (jTable_Display_CpuDetails.getModel().getValueAt(row,0).toString());
        String query ="UPDATE CpuDetails SET name=?, smt=?, integrated_graphics=?, tdp=?, boost_clock=?, core_clock=?, core_count=?, price=? where cpuID="+value;
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1,txtName.getText());
        if(chkSMT.isSelected()){
            smt ="YES";
        }
        else{
            smt="NO";
        }
        pst.setString(2,smt);
        pst.setString(3, txtIntegratedGraphics.getText());
        pst.setString(4,txtTDP.getText());
        pst.setString(5, txtBoostClock.getText());
        
        pst.setString(6, txtCoreClock.getText());
        int corecount = Integer.parseInt(txtCoreCount.getText());
        pst.setInt(7,corecount);
        double price = Double.parseDouble(txtPrecio.getText());
        pst.setDouble(8,price);        
        pst.executeUpdate();
        DefaultTableModel model =(DefaultTableModel)jTable_Display_CpuDetails.getModel();
        model.setRowCount(0);
        show_cpu();
        JOptionPane.showMessageDialog(null, "Modificado exitosamente");
        }
        catch(Exception ex)
        {
        JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        // parametros de la conexion
        String usr = "sa";
        String pwd = "YH6YDhmU6!X7XT";
        String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url = "jdbc:sqlserver://localhost\\SQLEXPRESS:56788;databaseName=JavaJ3;user=sa;password=YH6YDhmU6!X7XT";
        Connection con = null;
        //PreparedStatement pstm = null;
        //ResultSet rs = null;
        int opt= JOptionPane.showConfirmDialog(null, "Esta seguro que desea Eliminar el registro seleccionado?","Eliminar",JOptionPane.YES_NO_OPTION);
        if(opt==0){
        try
        {
        
        // establezco la conexion
        con = DriverManager.getConnection(url,usr,pwd);
        int row = jTable_Display_CpuDetails.getSelectedRow();
        String value = (jTable_Display_CpuDetails.getModel().getValueAt(row,0).toString());
        String query = "DELETE FROM CpuDetails where cpuID="+value;
        PreparedStatement pst= con.prepareStatement(query);
        pst.executeUpdate();
        DefaultTableModel model =(DefaultTableModel)jTable_Display_CpuDetails.getModel();
        model.setRowCount(0);
        show_cpu();
        JOptionPane.showMessageDialog(null, "Eliminado exitosamente");
        }
        catch(Exception ex)
        {
        JOptionPane.showMessageDialog(null, ex);
        }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        chkSMT.setSelected(false);
        txtIntegratedGraphics.setText("");
        txtTDP.setText("");
        txtBoostClock.setText("");
        txtCoreClock.setText("");
        txtCoreCount.setText("");
        txtPrecio.setText("");
        
    }//GEN-LAST:event_btnLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JCheckBox chkSMT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Display_CpuDetails;
    private javax.swing.JTextField txtBoostClock;
    private javax.swing.JTextField txtCoreClock;
    private javax.swing.JTextField txtCoreCount;
    private javax.swing.JTextField txtIntegratedGraphics;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTDP;
    // End of variables declaration//GEN-END:variables
}
